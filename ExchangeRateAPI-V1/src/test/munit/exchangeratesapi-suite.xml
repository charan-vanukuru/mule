<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="exchangeratesapi-suite.xml" />
	<munit:test name="exchangeratesapi-main-test"
		doc:id="8fce4117-e37d-4aff-8e79-833cf01bd863">
		<munit:behavior>
			<munit-tools:mock-when
				doc:name="Mock APIkit Router"
				doc:id="a7424160-4bca-4e99-b5e0-66d40401369c"
				processor="apikit:router">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="c8a90dda-b8ef-45ef-98d4-df91c7691a88"
						attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[output application/json  --- readUrl('classpath://exchangeratesapimaintest\mock_payload.dwl')]"
						mediaType="application/json " encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input"
				doc:id="8318f229-d913-45a1-8936-8248f3a9e135">
				<munit:payload
					value="#[readUrl('classpath://exchangeratesapimaintest\set-event_payload1.dwl')]"
					encoding="UTF-8" />
				<munit:attributes
					value="#[readUrl('classpath://exchangeratesapimaintest\set-event_attributes1.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="Flow-ref to exchangeratesapi-main"
				doc:id="b946461f-8287-4633-8ed0-57d7bd04e3f1"
				name="exchangeratesapi-main" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert doc:name="Assert payload"
				doc:id="428fa045-e51e-4de9-9ea8-3a4445bae037"
				message="The payload does not match">
				<munit-tools:that><![CDATA[#[%dw 2.0
import exchangeratesapimaintest::assert_expression_payload1
---
assert_expression_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="getRates_Sub_Flow-test"
		doc:id="22187464-983c-4178-9827-5f84cf00765a">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock Request"
				doc:id="4bebb918-0d59-4271-92b6-66a6eea58eaf"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute
						whereValue="79f50702-e218-4c32-a725-aa458fe4e9e8"
						attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[output application/json  --- readUrl('classpath://getRatesSubflowSubFlowtest\mock_payload.dwl')]"
						mediaType="application/json " encoding="UTF-8" />
					<munit-tools:attributes
						value="#[readUrl('classpath://getRatesSubflowSubFlowtest\mock_attributes.dwl')]" />
					<munit-tools:variables>
						<munit-tools:variable key="inputCurrency"
							value="#[output application/json --- readUrl('classpath://getRatesSubflowSubFlowtest\mock_variable_.dwl')]"
							mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders"
							value="#[readUrl('classpath://getRatesSubflowSubFlowtest\mock_variable_1.dwl')]" />
						<munit-tools:variable key="backendURL"
							value="#[output application/json --- readUrl('classpath://getRatesSubflowSubFlowtest\mock_variable_2.dwl')]"
							mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input"
				doc:id="a58a4f2c-add4-45ca-b78c-03c4425fe9bb">
				<munit:payload
					value="#[readUrl('classpath://getRatesSubflowSubFlowtest\set-event_payload.dwl')]"
					encoding="UTF-8" />
				<munit:attributes
					value="#[readUrl('classpath://getRatesSubflowSubFlowtest\set-event_attributes.dwl')]" />
				<munit:variables>
					<munit:variable key="inputCurrency"
						value="#[output application/json --- readUrl('classpath://getRatesSubflowSubFlowtest\set-event_variable_.dwl')]"
						encoding="UTF-8" mediaType="application/json" />
					<munit:variable key="outboundHeaders"
						value="#[readUrl('classpath://getRatesSubflowSubFlowtest\set-event_variable_1.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="Flow-ref to getRates_SubflowSub_Flow"
				doc:id="2c7fddfe-6222-408d-87c0-3796a48826c8"
				name="getRates_SubflowFlow" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert doc:name="Assert payload"
				doc:id="b8ae4518-6e64-4d91-bf9c-f1e83dfecabd"
				message="The payload does not match">
				<munit-tools:that><![CDATA[#[%dw 2.0
import getRatesSubflowSubFlowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
</mule>
